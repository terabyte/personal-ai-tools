#!/usr/bin/env bash

SELF=$(basename $0)

# Full path to the PagerDuty API
PAGERDUTY_URL=${PAGERDUTY_URL:-https://api.pagerduty.com}

# Generic options to pass to `curl` before the method & headers
CURL_OPTS=${CURL_OPTS:--s}

# Email domain for token account (customizable via EMAIL_DOMAIN environment variable)
EMAIL_DOMAIN=${EMAIL_DOMAIN:-indeed.com}

# "username" to use to search for the key in the keychain
TOKEN_ACCOUNT=${TOKEN_ACCOUNT:-${LDAPUSER:-$(whoami)}}@${EMAIL_DOMAIN}

function usage {
    cat <<USAGE
$SELF: Convenience wrapper for the PagerDuty API.

USAGE:
    $SELF method path [rest...]

ARGUMENTS:
    method
        HTTP method to use when making the PagerDuty request. GET, POST, PUT, etc.
    path
        Path relative to ${PAGERDUTY_URL} of the API request.
    rest...
        All other arguments are blindly forwarded to \`curl\`.

EXAMPLES:
    pagerduty-api GET /users
    pagerduty-api GET /incidents
    pagerduty-api GET /services
    pagerduty-api GET "/incidents?statuses%5B%5D=triggered&statuses%5B%5D=acknowledged"

# PagerDuty API Usage

## Getting Started

You need a PagerDuty API token to use this tool. Get one by:

1. Go to https://indeed.pagerduty.com/api_keys
2. Click "Create New API Key"
3. Give it a description like "Personal CLI Tools"
4. Copy the token

Store the token in one of these ways:
- File: ~/.pagerduty-token (preferred)
- Environment variable: PAGERDUTY_TOKEN
- macOS Keychain: Will prompt to store on first use

## Common Endpoints

**Users:**
    pagerduty-api GET /users                    # List all users
    pagerduty-api GET /users/USERID             # Get specific user

**Incidents:**
    pagerduty-api GET /incidents                # Recent incidents
    pagerduty-api GET /incidents?statuses%5B%5D=triggered    # Only triggered
    pagerduty-api GET /incidents/INCIDENTID     # Specific incident

**Services:**
    pagerduty-api GET /services                 # List services
    pagerduty-api GET /services/SERVICEID       # Specific service

**Schedules:**
    pagerduty-api GET /schedules                # List schedules
    pagerduty-api GET /schedules/SCHEDULEID     # Specific schedule

**On-Call:**
    pagerduty-api GET "/oncalls?schedule_ids%5B%5D=SCHEDULEID"  # Current on-call

## Response Format

PagerDuty API returns JSON with pagination:
{
  "offset": 0,
  "limit": 25,
  "more": true,
  "total": 150,
  "data": [...]
}

Use offset and limit parameters for pagination:
    pagerduty-api GET "/incidents?offset=25&limit=25"

USAGE
    exit 1
}

function get_token {
    [[ -v PAGERDUTY_TOKEN ]] && return 0

    # Try to read from ~/.pagerduty-token file first
    local token_file="$HOME/.pagerduty-token"
    if [[ -f "$token_file" ]]; then
        PAGERDUTY_TOKEN=$(cat "$token_file" 2>/dev/null | tr -d '\n')
        [[ -n "$PAGERDUTY_TOKEN" ]] && return 0
    fi

    # Fall back to keychain on macOS if security command exists
    if command -v security >/dev/null 2>&1; then
        local domain="${PAGERDUTY_URL#*://}"
        domain="${domain%%/*}"
        PAGERDUTY_TOKEN=$(security find-internet-password \
            -s "$domain" \
            -a "$TOKEN_ACCOUNT" \
            -w 2>/dev/null)

        [[ $? == 0 && -n "$PAGERDUTY_TOKEN" ]] && return 0

        local entry_comment="Autogenerated by $SELF script."
        cat <<TOKEN >&2
Could not find either a PAGERDUTY_TOKEN environment variable, ~/.pagerduty-token file,
or an appropriate OSX keychain entry. This script will prompt you for your PagerDuty API token
and save it in the OSX keychain as an entry with the following details:

    Name: $domain
    Kind: Internet password
    Account: $TOKEN_ACCOUNT
    Where: $PAGERDUTY_URL
    Comment: $entry_comment

Get your API token from: https://indeed.pagerduty.com/api_keys

TOKEN
        echo -n "API token for $PAGERDUTY_URL: " >&2
        read -s PAGERDUTY_TOKEN
        security add-internet-password \
            -a "$TOKEN_ACCOUNT" \
            -s "$domain" \
            -r htps \
            -j "$entry_comment" \
            -w "$PAGERDUTY_TOKEN"
    else
        # On Linux or systems without keychain, require token file or environment variable
        cat <<TOKEN >&2
Could not find either a PAGERDUTY_TOKEN environment variable or ~/.pagerduty-token file.
Please create ~/.pagerduty-token with your PagerDuty API token, or set PAGERDUTY_TOKEN environment variable.

Get your API token from: https://indeed.pagerduty.com/api_keys

TOKEN
        return 1
    fi
}

call_api() {
    local method=$1
    # relative to PAGERDUTY_URL
    local path=$2
    shift 2 || usage

    get_token || return 0

    curl "$CURL_OPTS" -X "$method" \
        -H "Authorization: Token token=$PAGERDUTY_TOKEN" \
        -H "Accept: application/vnd.pagerduty+json;version=2" \
        -H "Content-Type: application/json" \
        "${PAGERDUTY_URL%/}/${path#/}" \
        "$@"
}

call_api "$@"