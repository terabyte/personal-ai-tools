#!/usr/bin/env bash

SELF=$(basename $0)

# Full path to the Confluence UI view
CONFLUENCE_URL=${CONFLUENCE_URL:-https://indeed.atlassian.net}

# Generic options to pass to `curl` before the method & headers
CURL_OPTS=${CURL_OPTS:--s}

# Path to the API endpoint.
CONFLUENCE_API_URL=${CONFLUENCE_URL}/wiki/rest/api

# "username" to use to search for the key in the keychain
TOKEN_ACCOUNT=${TOKEN_ACCOUNT:-$LDAPUSER}@indeed.com

function usage {
    cat <<USAGE
$SELF: Convenience wrapper for the Confluence API.

USAGE:
    $SELF method path [rest...]

ARGUMENTS:
    method
        HTTP method to use when making the Confluence request. GET, POST, PUT, etc.
    path
        Path relative to ${CONFLUENCE_API_URL} of the API request.
    rest...
        All other arguments are blindly forwarded to \`curl\`.

EXAMPLES:
    confluence-api GET /content/123456789
    confluence-api GET "/content/123456789?expand=body.storage,version"
    confluence-api PUT /content/123456789 -d '{"version":{"number":2},"title":"Updated Title","type":"page","body":{"storage":{"value":"<p>Updated content</p>","representation":"storage"}}}'

# Confluence API Usage

## Reading a page

The \`confluence-api\` tool is a wrapper around curl for the Confluence REST API.

**Basic page retrieval:**

    confluence-api GET /content/PAGE_ID
    confluence-api GET "/content/PAGE_ID?expand=body.storage,version"

**Search for pages:**

    confluence-api GET "/content?title=Page Title&spaceKey=SPACE"
    confluence-api GET "/content?type=page&limit=50"

## Updating a page

**Important notes:**
- You MUST include the current version number + 1 when updating
- The \`expand=version\` parameter gets the current version number
- Use storage format for the body content (Confluence's internal HTML-like format)
- The tool automatically handles authentication and headers

**Update page content:**

    # First, get the current version
    confluence-api GET "/content/PAGE_ID?expand=version"
    
    # Then update with incremented version number
    confluence-api PUT /content/PAGE_ID -d '{
        "version": {"number": CURRENT_VERSION + 1},
        "title": "Page Title",
        "type": "page",
        "body": {
            "storage": {
                "value": "<p>Your HTML content here</p>",
                "representation": "storage"
            }
        }
    }'

## Creating a page

**Create a new page:**

    confluence-api POST /content -d '{
        "type": "page",
        "title": "New Page Title",
        "space": {"key": "SPACE_KEY"},
        "body": {
            "storage": {
                "value": "<p>Your content here</p>",
                "representation": "storage"
            }
        }
    }'

## Common expansions

- \`body.storage\` - Get page content in storage format
- \`version\` - Get version information (needed for updates)
- \`space\` - Get space information
- \`history\` - Get page history
- \`children.page\` - Get child pages

**Example with multiple expansions:**

    confluence-api GET "/content/PAGE_ID?expand=body.storage,version,space"

**Example response:**
{"id":"123456789","type":"page","status":"current","title":"Page Title","version":{"number":5},...}

USAGE
    exit 1
}

function get_token {
    [[ -v CONFLUENCE_TOKEN ]] && return 0

    local domain="${CONFLUENCE_URL#*://}"
    domain="${domain%%/*}"
    CONFLUENCE_TOKEN=$(security find-internet-password \
        -s "$domain" \
        -a "$TOKEN_ACCOUNT" \
        -w)

    [[ $? == 0 ]] && return 0

    local entry_comment="Autogenerated by $SELF script."
    cat <<TOKEN >&2
Could not find either a CONFLUENCE_TOKEN environment variable or an appropriate
OSX keychain entry. This script will prompt you for your Confluence password and
save it in the OSX keychain as an entry with the following details:

    Name: $domain
    Kind: Internet password
    Account: $TOKEN_ACCOUNT
    Where: $CONFLUENCE_URL
    Comment: $entry_comment

TOKEN
    echo -n "Password for $CONFLUENCE_URL: " >&2
    read -s CONFLUENCE_TOKEN
    security add-internet-password \
        -a "$TOKEN_ACCOUNT" \
        -s "$domain" \
        -r htps \
        -j "$entry_comment" \
        -w "$CONFLUENCE_TOKEN"
}

call_api() {
    local method=$1
    # relative to CONFLUENCE_API_URL
    local path=$2
    shift 2 || usage

    get_token || return 0

    curl "$CURL_OPTS" -X "$method" \
        --user "$TOKEN_ACCOUNT:$CONFLUENCE_TOKEN" \
        -H "Content-Type: application/json" \
        "${CONFLUENCE_API_URL%/}/${path#/}" \
        "$@"
}

call_api "$@"
